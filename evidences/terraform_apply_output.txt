terraform plan -var-file="terraform.tfvars"

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.alb_security_group.aws_security_group.this will be created
  + resource "aws_security_group" "this" {
      + arn                    = (known after apply)
      + description            = "Security group for the ALB"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow all outbound traffic"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow HTTP from anywhere"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow HTTPS from anywhere"
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
            },
        ]
      + name                   = "365-alb-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Environment" = "dev"
          + "Name"        = "365-alb-sg"
          + "Project"     = "365"
        }
      + tags_all               = {
          + "Environment" = "dev"
          + "Name"        = "365-alb-sg"
          + "Project"     = "365"
        }
      + vpc_id                 = (known after apply)
    }

  # module.route53.aws_route53_record.cname will be created
  + resource "aws_route53_record" "cname" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "www"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = (known after apply)
    }

  # module.route53.aws_route53_zone.this will be created
  + resource "aws_route53_zone" "this" {
      + arn                 = (known after apply)
      + comment             = "Managed by Terraform"
      + force_destroy       = false
      + id                  = (known after apply)
      + name                = "shaharshitrit.com"
      + name_servers        = (known after apply)
      + primary_name_server = (known after apply)
      + tags                = {
          + "Environment" = "dev"
          + "Project"     = "365"
        }
      + tags_all            = {
          + "Environment" = "dev"
          + "Project"     = "365"
        }
      + zone_id             = (known after apply)
    }

  # module.alb.module.alb.aws_lb.this[0] will be created
  + resource "aws_lb" "this" {
      + arn                                                          = (known after apply)
      + arn_suffix                                                   = (known after apply)
      + client_keep_alive                                            = 3600
      + desync_mitigation_mode                                       = "defensive"
      + dns_name                                                     = (known after apply)
      + drop_invalid_header_fields                                   = false
      + enable_deletion_protection                                   = false
      + enable_http2                                                 = true
      + enable_tls_version_and_cipher_suite_headers                  = false
      + enable_waf_fail_open                                         = false
      + enable_xff_client_port                                       = true
      + enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      + id                                                           = (known after apply)
      + idle_timeout                                                 = 60
      + internal                                                     = false
      + ip_address_type                                              = "ipv4"
      + load_balancer_type                                           = "application"
      + name                                                         = "365-alb"
      + name_prefix                                                  = (known after apply)
      + preserve_host_header                                         = false
      + security_groups                                              = (known after apply)
      + subnets                                                      = (known after apply)
      + tags                                                         = {
          + "Name" = "365-alb"
        }
      + tags_all                                                     = {
          + "Name" = "365-alb"
        }
      + vpc_id                                                       = (known after apply)
      + xff_header_processing_mode                                   = "append"
      + zone_id                                                      = (known after apply)

      + timeouts {
          + create = "10m"
          + delete = "10m"
          + update = "10m"
        }
    }

  # module.alb.module.alb.aws_lb_listener.frontend_http_tcp[0] will be created
  + resource "aws_lb_listener" "frontend_http_tcp" {
      + arn                      = (known after apply)
      + id                       = (known after apply)
      + load_balancer_arn        = (known after apply)
      + port                     = 80
      + protocol                 = "HTTP"
      + ssl_policy               = (known after apply)
      + tags                     = {
          + "Name" = "365-alb"
        }
      + tags_all                 = {
          + "Name" = "365-alb"
        }
      + tcp_idle_timeout_seconds = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = (known after apply)
          + type             = "forward"
        }
    }

  # module.alb.module.alb.aws_lb_listener.frontend_https[0] will be created
  + resource "aws_lb_listener" "frontend_https" {
      + arn                      = (known after apply)
      + certificate_arn          = "arn:aws:acm:eu-north-1:194722398257:certificate/484cb8cf-5660-48e5-af42-d6369bd3af24"
      + id                       = (known after apply)
      + load_balancer_arn        = (known after apply)
      + port                     = 443
      + protocol                 = "HTTPS"
      + ssl_policy               = "ELBSecurityPolicy-2016-08"
      + tags                     = {
          + "Name" = "365-alb"
        }
      + tags_all                 = {
          + "Name" = "365-alb"
        }
      + tcp_idle_timeout_seconds = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = (known after apply)
          + type             = "forward"
        }
    }

  # module.alb.module.alb.aws_lb_target_group.main[0] will be created
  + resource "aws_lb_target_group" "main" {
      + arn                                = (known after apply)
      + arn_suffix                         = (known after apply)
      + connection_termination             = (known after apply)
      + deregistration_delay               = "300"
      + id                                 = (known after apply)
      + ip_address_type                    = (known after apply)
      + lambda_multi_value_headers_enabled = false
      + load_balancer_arns                 = (known after apply)
      + load_balancing_algorithm_type      = (known after apply)
      + load_balancing_anomaly_mitigation  = (known after apply)
      + load_balancing_cross_zone_enabled  = (known after apply)
      + name                               = "365-tg"
      + name_prefix                        = (known after apply)
      + port                               = 80
      + preserve_client_ip                 = (known after apply)
      + protocol                           = "HTTP"
      + protocol_version                   = (known after apply)
      + proxy_protocol_v2                  = false
      + slow_start                         = 0
      + tags                               = {
          + "Name" = "365-tg"
        }
      + tags_all                           = {
          + "Name" = "365-tg"
        }
      + target_type                        = "instance"
      + vpc_id                             = (known after apply)

      + health_check {
          + enabled             = true
          + healthy_threshold   = 3
          + interval            = 30
          + matcher             = "200"
          + path                = "/"
          + port                = "traffic-port"
          + protocol            = "HTTP"
          + timeout             = (known after apply)
          + unhealthy_threshold = 3
        }
    }

  # module.alb.module.alb.aws_security_group.this[0] will be created
  + resource "aws_security_group" "this" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "365-alb-"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "365-alb"
        }
      + tags_all               = {
          + "Name" = "365-alb"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.module.vpc.aws_default_network_acl.this[0] will be created
  + resource "aws_default_network_acl" "this" {
      + arn                    = (known after apply)
      + default_network_acl_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + tags                   = {
          + "Name" = "365scores-vpc"
        }
      + tags_all               = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                 = (known after apply)

      + egress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + egress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }

      + ingress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + ingress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }
    }

  # module.vpc.module.vpc.aws_default_route_table.default[0] will be created
  + resource "aws_default_route_table" "default" {
      + arn                    = (known after apply)
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Name" = "365scores-vpc"
        }
      + tags_all               = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "5m"
          + update = "5m"
        }
    }

  # module.vpc.module.vpc.aws_default_security_group.this[0] will be created
  + resource "aws_default_security_group" "this" {
      + arn                    = (known after apply)
      + description            = (known after apply)
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "365scores-vpc"
        }
      + tags_all               = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "365scores-vpc"
        }
      + tags_all             = {
          + "Name" = "365scores-vpc"
        }
      + vpc                  = (known after apply)
    }

  # module.vpc.module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "365scores-vpc"
        }
      + tags_all = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                           = {
          + "Name" = "365scores-vpc"
        }
    }

  # module.vpc.module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "365scores-vpc"
        }
      + tags_all         = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "365scores-vpc"
        }
      + tags_all         = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-north-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                                       = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-north-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                                       = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-north-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                                       = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-north-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.4.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                                       = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                             = {
          + "Name" = "365scores-vpc"
        }
    }

Plan: 27 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + alb_dns_name      = (known after apply)
  + route53_zone_id   = (known after apply)
  + security_group_id = (known after apply)
  + vpc_id            = (known after apply)

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Saved the plan to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"
Releasing state lock. This may take a few moments...
❯ terraform apply -var-file="terraform.tfvars"


Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.alb_security_group.aws_security_group.this will be created
  + resource "aws_security_group" "this" {
      + arn                    = (known after apply)
      + description            = "Security group for the ALB"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow all outbound traffic"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow HTTP from anywhere"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow HTTPS from anywhere"
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
            },
        ]
      + name                   = "365-alb-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Environment" = "dev"
          + "Name"        = "365-alb-sg"
          + "Project"     = "365"
        }
      + tags_all               = {
          + "Environment" = "dev"
          + "Name"        = "365-alb-sg"
          + "Project"     = "365"
        }
      + vpc_id                 = (known after apply)
    }

  # module.route53.aws_route53_record.cname will be created
  + resource "aws_route53_record" "cname" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "www"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = (known after apply)
    }

  # module.route53.aws_route53_zone.this will be created
  + resource "aws_route53_zone" "this" {
      + arn                 = (known after apply)
      + comment             = "Managed by Terraform"
      + force_destroy       = false
      + id                  = (known after apply)
      + name                = "shaharshitrit.com"
      + name_servers        = (known after apply)
      + primary_name_server = (known after apply)
      + tags                = {
          + "Environment" = "dev"
          + "Project"     = "365"
        }
      + tags_all            = {
          + "Environment" = "dev"
          + "Project"     = "365"
        }
      + zone_id             = (known after apply)
    }

  # module.alb.module.alb.aws_lb.this[0] will be created
  + resource "aws_lb" "this" {
      + arn                                                          = (known after apply)
      + arn_suffix                                                   = (known after apply)
      + client_keep_alive                                            = 3600
      + desync_mitigation_mode                                       = "defensive"
      + dns_name                                                     = (known after apply)
      + drop_invalid_header_fields                                   = false
      + enable_deletion_protection                                   = false
      + enable_http2                                                 = true
      + enable_tls_version_and_cipher_suite_headers                  = false
      + enable_waf_fail_open                                         = false
      + enable_xff_client_port                                       = true
      + enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      + id                                                           = (known after apply)
      + idle_timeout                                                 = 60
      + internal                                                     = false
      + ip_address_type                                              = "ipv4"
      + load_balancer_type                                           = "application"
      + name                                                         = "365-alb"
      + name_prefix                                                  = (known after apply)
      + preserve_host_header                                         = false
      + security_groups                                              = (known after apply)
      + subnets                                                      = (known after apply)
      + tags                                                         = {
          + "Name" = "365-alb"
        }
      + tags_all                                                     = {
          + "Name" = "365-alb"
        }
      + vpc_id                                                       = (known after apply)
      + xff_header_processing_mode                                   = "append"
      + zone_id                                                      = (known after apply)

      + timeouts {
          + create = "10m"
          + delete = "10m"
          + update = "10m"
        }
    }

  # module.alb.module.alb.aws_lb_listener.frontend_http_tcp[0] will be created
  + resource "aws_lb_listener" "frontend_http_tcp" {
      + arn                      = (known after apply)
      + id                       = (known after apply)
      + load_balancer_arn        = (known after apply)
      + port                     = 80
      + protocol                 = "HTTP"
      + ssl_policy               = (known after apply)
      + tags                     = {
          + "Name" = "365-alb"
        }
      + tags_all                 = {
          + "Name" = "365-alb"
        }
      + tcp_idle_timeout_seconds = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = (known after apply)
          + type             = "forward"
        }
    }

  # module.alb.module.alb.aws_lb_listener.frontend_https[0] will be created
  + resource "aws_lb_listener" "frontend_https" {
      + arn                      = (known after apply)
      + certificate_arn          = "arn:aws:acm:eu-north-1:194722398257:certificate/484cb8cf-5660-48e5-af42-d6369bd3af24"
      + id                       = (known after apply)
      + load_balancer_arn        = (known after apply)
      + port                     = 443
      + protocol                 = "HTTPS"
      + ssl_policy               = "ELBSecurityPolicy-2016-08"
      + tags                     = {
          + "Name" = "365-alb"
        }
      + tags_all                 = {
          + "Name" = "365-alb"
        }
      + tcp_idle_timeout_seconds = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = (known after apply)
          + type             = "forward"
        }
    }

  # module.alb.module.alb.aws_lb_target_group.main[0] will be created
  + resource "aws_lb_target_group" "main" {
      + arn                                = (known after apply)
      + arn_suffix                         = (known after apply)
      + connection_termination             = (known after apply)
      + deregistration_delay               = "300"
      + id                                 = (known after apply)
      + ip_address_type                    = (known after apply)
      + lambda_multi_value_headers_enabled = false
      + load_balancer_arns                 = (known after apply)
      + load_balancing_algorithm_type      = (known after apply)
      + load_balancing_anomaly_mitigation  = (known after apply)
      + load_balancing_cross_zone_enabled  = (known after apply)
      + name                               = "365-tg"
      + name_prefix                        = (known after apply)
      + port                               = 80
      + preserve_client_ip                 = (known after apply)
      + protocol                           = "HTTP"
      + protocol_version                   = (known after apply)
      + proxy_protocol_v2                  = false
      + slow_start                         = 0
      + tags                               = {
          + "Name" = "365-tg"
        }
      + tags_all                           = {
          + "Name" = "365-tg"
        }
      + target_type                        = "instance"
      + vpc_id                             = (known after apply)

      + health_check {
          + enabled             = true
          + healthy_threshold   = 3
          + interval            = 30
          + matcher             = "200"
          + path                = "/"
          + port                = "traffic-port"
          + protocol            = "HTTP"
          + timeout             = (known after apply)
          + unhealthy_threshold = 3
        }
    }

  # module.alb.module.alb.aws_security_group.this[0] will be created
  + resource "aws_security_group" "this" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "365-alb-"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "365-alb"
        }
      + tags_all               = {
          + "Name" = "365-alb"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.module.vpc.aws_default_network_acl.this[0] will be created
  + resource "aws_default_network_acl" "this" {
      + arn                    = (known after apply)
      + default_network_acl_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + tags                   = {
          + "Name" = "365scores-vpc"
        }
      + tags_all               = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                 = (known after apply)

      + egress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + egress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }

      + ingress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + ingress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }
    }

  # module.vpc.module.vpc.aws_default_route_table.default[0] will be created
  + resource "aws_default_route_table" "default" {
      + arn                    = (known after apply)
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Name" = "365scores-vpc"
        }
      + tags_all               = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "5m"
          + update = "5m"
        }
    }

  # module.vpc.module.vpc.aws_default_security_group.this[0] will be created
  + resource "aws_default_security_group" "this" {
      + arn                    = (known after apply)
      + description            = (known after apply)
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "365scores-vpc"
        }
      + tags_all               = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "365scores-vpc"
        }
      + tags_all             = {
          + "Name" = "365scores-vpc"
        }
      + vpc                  = (known after apply)
    }

  # module.vpc.module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "365scores-vpc"
        }
      + tags_all = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                           = {
          + "Name" = "365scores-vpc"
        }
    }

  # module.vpc.module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "365scores-vpc"
        }
      + tags_all         = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "365scores-vpc"
        }
      + tags_all         = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-north-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                                       = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-north-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                                       = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-north-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                                       = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-north-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.4.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                                       = {
          + "Name" = "365scores-vpc"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "365scores-vpc"
        }
      + tags_all                             = {
          + "Name" = "365scores-vpc"
        }
    }

Plan: 27 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + alb_dns_name      = (known after apply)
  + route53_zone_id   = (known after apply)
  + security_group_id = (known after apply)
  + vpc_id            = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.vpc.module.vpc.aws_vpc.this[0]: Creating...
module.vpc.module.vpc.aws_vpc.this[0]: Still creating... [10s elapsed]
module.vpc.module.vpc.aws_vpc.this[0]: Creation complete after 13s [id=vpc-007e3b09f3a5ac3b1]
module.vpc.module.vpc.aws_internet_gateway.this[0]: Creating...
module.vpc.module.vpc.aws_route_table.public[0]: Creating...
module.vpc.module.vpc.aws_subnet.private[0]: Creating...
module.vpc.module.vpc.aws_default_security_group.this[0]: Creating...
module.vpc.module.vpc.aws_subnet.public[1]: Creating...
module.vpc.module.vpc.aws_default_route_table.default[0]: Creating...
module.vpc.module.vpc.aws_default_network_acl.this[0]: Creating...
module.vpc.module.vpc.aws_route_table.private[0]: Creating...
module.vpc.module.vpc.aws_subnet.private[1]: Creating...
module.vpc.module.vpc.aws_subnet.public[0]: Creating...
module.vpc.module.vpc.aws_default_route_table.default[0]: Creation complete after 2s [id=rtb-01789879fd130f811]
module.vpc.module.vpc.aws_subnet.public[1]: Creation complete after 2s [id=subnet-0d8759cf5d3a31149]
module.alb_security_group.aws_security_group.this: Creating...
module.alb.module.alb.aws_security_group.this[0]: Creating...
module.vpc.module.vpc.aws_internet_gateway.this[0]: Creation complete after 2s [id=igw-0ecf10f128dcafc6b]
module.alb.module.alb.aws_lb_target_group.main[0]: Creating...
module.vpc.module.vpc.aws_subnet.private[0]: Creation complete after 2s [id=subnet-0639fabe096a32d75]
module.vpc.module.vpc.aws_eip.nat[0]: Creating...
module.vpc.module.vpc.aws_route_table.public[0]: Creation complete after 2s [id=rtb-0a58273cc12b17188]
module.vpc.module.vpc.aws_route.public_internet_gateway[0]: Creating...
module.vpc.module.vpc.aws_route_table.private[0]: Creation complete after 2s [id=rtb-0b80312d66e2eb63a]
module.vpc.module.vpc.aws_subnet.private[1]: Creation complete after 2s [id=subnet-00df91d8902029e6a]
module.vpc.module.vpc.aws_route_table_association.private[1]: Creating...
module.vpc.module.vpc.aws_route_table_association.private[0]: Creating...
module.vpc.module.vpc.aws_subnet.public[0]: Creation complete after 2s [id=subnet-0bfaca0cd5e5942b2]
module.vpc.module.vpc.aws_route_table_association.public[1]: Creating...
module.vpc.module.vpc.aws_route.public_internet_gateway[0]: Creation complete after 1s [id=r-rtb-0a58273cc12b171881080289494]
module.vpc.module.vpc.aws_route_table_association.public[0]: Creating...
module.vpc.module.vpc.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-0009c08005734c76b]
module.vpc.module.vpc.aws_default_network_acl.this[0]: Creation complete after 3s [id=acl-0d95878ac5e89dcac]
module.vpc.module.vpc.aws_eip.nat[0]: Creation complete after 1s [id=eipalloc-081b09f03dc079842]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Creating...
module.vpc.module.vpc.aws_route_table_association.private[1]: Creation complete after 1s [id=rtbassoc-0bd7b6ecfeea485b7]
module.vpc.module.vpc.aws_route_table_association.public[1]: Creation complete after 1s [id=rtbassoc-083393463ec0dec2a]
module.vpc.module.vpc.aws_default_security_group.this[0]: Creation complete after 3s [id=sg-03cd4864f55b47cf0]
module.vpc.module.vpc.aws_route_table_association.public[0]: Creation complete after 0s [id=rtbassoc-085feb5d0c71c3490]
module.alb.module.alb.aws_lb_target_group.main[0]: Creation complete after 2s [id=arn:aws:elasticloadbalancing:eu-north-1:194722398257:targetgroup/365-tg/5c494dc6366357d8]
module.alb.module.alb.aws_security_group.this[0]: Creation complete after 2s [id=sg-02632e9b987a32576]
module.alb_security_group.aws_security_group.this: Creation complete after 3s [id=sg-0f549efdd792a9ca2]
module.alb.module.alb.aws_lb.this[0]: Creating...
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [10s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [10s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [20s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [20s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [30s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [30s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [40s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [40s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [50s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [50s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [1m0s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [1m0s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [1m10s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [1m10s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [1m20s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [1m20s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [1m30s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [1m30s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Still creating... [1m40s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [1m40s elapsed]
module.vpc.module.vpc.aws_nat_gateway.this[0]: Creation complete after 1m45s [id=nat-0634cdd6cf45a6ece]
module.vpc.module.vpc.aws_route.private_nat_gateway[0]: Creating...
module.vpc.module.vpc.aws_route.private_nat_gateway[0]: Creation complete after 1s [id=r-rtb-0b80312d66e2eb63a1080289494]
module.alb.module.alb.aws_lb.this[0]: Still creating... [1m50s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [2m0s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [2m10s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [2m20s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [2m30s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [2m40s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [2m50s elapsed]
module.alb.module.alb.aws_lb.this[0]: Still creating... [3m0s elapsed]
module.alb.module.alb.aws_lb.this[0]: Creation complete after 3m4s [id=arn:aws:elasticloadbalancing:eu-north-1:194722398257:loadbalancer/app/365-alb/1439104077c6b7c4]
module.alb.module.alb.aws_lb_listener.frontend_http_tcp[0]: Creating...
module.alb.module.alb.aws_lb_listener.frontend_https[0]: Creating...
module.alb.module.alb.aws_lb_listener.frontend_http_tcp[0]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:eu-north-1:194722398257:listener/app/365-alb/1439104077c6b7c4/b97f6fad01507753]
module.alb.module.alb.aws_lb_listener.frontend_https[0]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:eu-north-1:194722398257:listener/app/365-alb/1439104077c6b7c4/74500194c5897af7]
module.route53.aws_route53_zone.this: Creating...
module.route53.aws_route53_zone.this: Still creating... [10s elapsed]
module.route53.aws_route53_zone.this: Still creating... [20s elapsed]
module.route53.aws_route53_zone.this: Still creating... [30s elapsed]
module.route53.aws_route53_zone.this: Still creating... [40s elapsed]
module.route53.aws_route53_zone.this: Creation complete after 41s [id=Z02920042WKXSMMCTTZZ0]
module.route53.aws_route53_record.cname: Creating...
module.route53.aws_route53_record.cname: Still creating... [10s elapsed]
module.route53.aws_route53_record.cname: Still creating... [20s elapsed]
module.route53.aws_route53_record.cname: Still creating... [30s elapsed]
module.route53.aws_route53_record.cname: Still creating... [40s elapsed]
module.route53.aws_route53_record.cname: Creation complete after 43s [id=Z02920042WKXSMMCTTZZ0_www_CNAME]
Releasing state lock. This may take a few moments...

Apply complete! Resources: 27 added, 0 changed, 0 destroyed.

Outputs:

alb_dns_name = "365-alb-324756136.eu-north-1.elb.amazonaws.com"
route53_zone_id = "Z02920042WKXSMMCTTZZ0"
security_group_id = "sg-0f549efdd792a9ca2"
vpc_id = "vpc-007e3b09f3a5ac3b1"